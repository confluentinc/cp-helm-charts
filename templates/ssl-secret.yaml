{{- if and .Values.global.kafka.ssl.enabled (ne .Values.global.kafka.ssl.secretName) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-kafka-ssl-secret
  labels:
    app: {{ template "cp-kafka.name" . }}
    chart: {{ template "cp-kafka.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  {{ .Values.global.kafka.ssl.broker.truststoreFile }}: |-
{{- $path := printf "certs/%s" .Values.global.kafka.ssl.broker.truststoreFile }}
{{ .Files.Get $path | b64enc | indent 4 }}
  {{ .Values.global.kafka.ssl.broker.keystoreFile }}: |-
{{- $path := printf "certs/%s" .Values.global.kafka.ssl.broker.keystoreFile }}
{{ .Files.Get $path | b64enc | indent 4 }}
  {{ .Values.global.kafka.ssl.client.truststoreFile }}: |-
{{- $path := printf "certs/%s" .Values.global.kafka.ssl.client.truststoreFile }}
{{ .Files.Get $path | b64enc | indent 4 }}
  {{ .Values.global.kafka.ssl.client.keystoreFile }}: |-
{{- $path := printf "certs/%s" .Values.global.kafka.ssl.client.keystoreFile }}
{{ .Files.Get $path | b64enc | indent 4 }}
stringData:
  broker.keystore.password: {{ .Values.global.kafka.ssl.broker.keystorePassword }}
  broker.key.password: {{ .Values.global.kafka.ssl.broker.keyPassword }}
  broker.truststore.password: {{ .Values.global.kafka.ssl.broker.truststorePassword }}
  client.truststore.password: {{ .Values.global.kafka.ssl.client.truststorePassword }}
  client.keystore.password: {{ .Values.global.kafka.ssl.client.keystorePassword }}
  client.key.password: {{ .Values.global.kafka.ssl.client.keyPassword }}
{{- end }}